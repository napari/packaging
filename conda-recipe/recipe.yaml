context:
  name: napari
  version: "REPLACE_ME"
  python_min: "3.10"
  build_number: 0

recipe:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  # This section has been patched from the original conda-forge feedstock
  # so it uses the mounted volume of the cloned repo in a Docker image
  - path: /home/conda/feedstock_root/napari-source

build:
  number: ${{ build_number }}

outputs:
  - package:
      name: napari-base
    build:
      noarch: python
      script: python -m pip install . -vv
      python:
        entry_points:
          - napari = napari.__main__:main
    requirements:
      host:
        - python ${{ python_min }}.*
        - pip
        - setuptools >=69
        - setuptools_scm >=8
      run:
        - python >=${{ python_min }}

        # dependencies matched to pyproject.toml
        - app-model >=0.4.0,<0.5.0a
        - appdirs >=1.4.4
        - cachey >=0.2.1
        - certifi >=2018.1.18
        # Do not depend on base "dask" package since it pulls
        # in the distributed dependency
        # conda-forge doesn't have the dask-array subpackage
        # so depend on cytoolz and numpy manually
        - cytoolz >=0.11.0
        - dask-core >=2021.10.0
        - imageio >=2.20,!=2.22.1
        - jsonschema >=3.2.0
        - lazy_loader >=0.3
        - magicgui >=0.7.0
        - napari-console >=0.1.1
        - napari-plugin-engine >=0.1.9
        - napari-svg >=0.1.8
        - npe2 >=0.7.9
        - numpy >=1.24.2
        - numpydoc >=1.0.0
        - pandas >=1.3.3
        - pillow >=9.0
        - pint >=0.17
        - psutil >=5.9.0
        - psygnal >=0.10.0
        - pydantic >=2.2.0
        - pygments >=2.6.0
        - pyopengl >=3.1.5
        - pywin32 >=302
        - pyyaml >=6.0
        - qtpy >=1.10.0
        - scikit-image >=0.19.1
        - scipy >=1.10.1
        - superqt >=0.7.4
        - tifffile >=2022.7.28
        - toolz >=0.11.0
        - tqdm >=4.56.0
        - typing_extensions >=4.12
        - vispy >=0.15.2,<0.16.0a0
        - wrapt >=1.13.3
      run_constraints:
        - pyside2 >=5.15.1
        - pyside6 >=6.7.1
        - pyqt >=5.15.8,<6.0a0|>=6.5,!=6.6.1
    tests:
      - python:
          pip_check: true
          imports:
            - napari
          python_version: ${{ python_min }}.*
      - script:
          - ${{ 'setx QT_API pyqt5' if win else 'export QT_API=pyqt5' }}
          - ${{ 'where napari' if win else 'which napari' }}
          - if: unix
            then:
              - napari --version
              - napari --version | grep "$(echo ${PKG_VERSION} | sed -re 's/(\.[0-9]+)\.dev/\1dev/')"
            else:
              - napari --version
          # If the following line is uncommented, also uncomment requirements.
          # - pytest --pyargs napari
        requirements:
          run:
            - pyqt
            # needed if pytest is uncommented above in 'script'
            #   - hypothesis
            #   - pytest
            #   - pytest-faulthandler
            #   - pytest-qt
            #   - xarray
            #   - pandas
            #   - pytest-timeout
    about:
      homepage: http://napari.org
      summary: a fast n-dimensional image viewer in Python, with only the required dependencies
      license: BSD-3-Clause AND MIT
      license_file:
        - LICENSE
        - src/napari/_vendor/darkdetect/LICENSE
        - src/napari/_vendor/qt_json_builder/LICENSE
      documentation: http://napari.org
      repository: https://github.com/napari/napari

  - package:
      name: napari
    build:
      noarch: python
    requirements:
      host:
        - python ${{ python_min }}.*
      run:
        - python >=${{ python_min }}
        - ${{ pin_subpackage('napari-base', exact=True) }}
        - bermuda >=0.1.5
        - fsspec
        - napari-plugin-manager >=0.1.3,<0.2.0a0
        - numba >=0.57.1
        - partsegcore-compiled-backend >=0.15.11
        - pooch >=1.3.0
        - zarr >=2.12.0
    tests:  # just to check that the environment can indeed solve
      - requirements:
          run:
            - python ${{ python_min }}.*
            - pyside2  # use this opportunity to test solvability with other backend
        script:
          - python -c "import napari"
    about:
      homepage: http://napari.org
      summary: a fast n-dimensional image viewer in Python
      license: BSD-3-Clause AND MIT
      license_file:
        - LICENSE
      documentation: http://napari.org
      repository: https://github.com/napari/napari

  - package:
      name: napari-menu
    build:
      noarch: python
      script:
        - mkdir -p "${{ PREFIX }}/Menu"
        - sed "s/__PKG_VERSION__/${{ PKG_VERSION }}/" "${{ SRC_DIR }}/resources/conda_menu_config.json" > "${{ PREFIX }}/Menu/napari-menu.json"
        - cp "${{ SRC_DIR }}/src/napari/resources/logo.png" "${{ PREFIX }}/Menu/napari.png"
        - cp "${{ SRC_DIR }}/src/napari/resources/icon.icns" "${{ PREFIX }}/Menu/napari.icns"
        - cp "${{ SRC_DIR }}/src/napari/resources/icon.ico" "${{ PREFIX }}/Menu/napari.ico"
    requirements:
      build:
        - if: unix
          then:
            - sed
          else:
            - m2-sed
      host:
        - python ${{ python_min }}.*
      run:
        - python >=${{ python_min }}
        - ${{ pin_subpackage('napari', exact=True) }}
    tests:
      - requirements:
          run:
            - python ${{ python_min }}
        script:
          - python -c "import napari"
      - package_contents:
          files:
            - Menu/napari-menu.json
    about:
      homepage: http://napari.org
      summary: Shortcut to open napari from the desktop environment menus
      license: BSD-3-Clause AND MIT
      license_file:
        - LICENSE
      documentation: http://napari.org
      repository: https://github.com/napari/napari

about:
  homepage: http://napari.org
  summary: a fast n-dimensional image viewer in Python
  license: BSD-3-Clause AND MIT
  license_file:
    - LICENSE

extra:
  feedstock-name: napari
  recipe-maintainers:
    - Czaki
    - jni
    - sofroniewn
    - kne42
    - royerloic
    - AhmetCanSolak
    - goanpeca
    - jaimergp
